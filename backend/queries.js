// instructions to setting up test database below
// https://parsity-fulltime-3.atlassian.net/jira/software/projects/PFTC3AP/boards/1?selectedIssue=PFTC3AP-9
const { Pool, Client } = require('pg');

const client = new Client({
  database: 'test',
});

const pool = new Pool({
  database: 'test',
});

const getDMs = (request, response) => {
  const query = `
    SELECT * FROM "dm";`;

  pool.query(query, (error, results) => {
    if (error) {
      throw error;
    }
    response.send(results.rows);
  });
};

async function setupDevDatabase(request, response) {
  client.connect();

  const createUserTable = `
    CREATE TABLE "slacker_users" (
        userID integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
        email varchar,
        name varchar
    );`;

  const createMessageTable = `
    CREATE TABLE message (
        messageID int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
        "userID" integer REFERENCES "slacker_users"(userID),
        text varchar,
        createdDate timestamp
    );`;

  const createChannelTable = `
    CREATE TABLE channel (
        channelID int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
        name varchar,
        description varchar
    );`;

  const createUserChannelJunction = `
    CREATE TABLE user_channel (
        "userID" integer REFERENCES "slacker_users"(userID),
        "channelID" integer REFERENCES "channel"(channelID),
        CONSTRAINT user_channel_pkey PRIMARY KEY ("userID", "channelID")
    );`;

  const createUserMessageJunction = `
    CREATE TABLE user_message (
        "userID" integer REFERENCES "slacker_users"(userID),
        "messageID" integer REFERENCES "message"(messageID),
        CONSTRAINT user_message_pkey PRIMARY KEY ("userID", "messageID")
    );`;

  const createDMTable = `
  CREATE TABLE dm (
    "user1" integer REFERENCES "slacker_users"(userID),
    "user2" integer REFERENCES "slacker_users"(userID),
    CONSTRAINT dml_pkey PRIMARY KEY ("user1", "user2")
  );`;

  await client.query(createUserTable).catch((err) => {
    console.log(err);
    console.log('----- slacker_users table could not be created :(');
  });
  console.log('+++++ slacker_users table exists or was successfully created');

  await client.query(createMessageTable).catch((err) => {
    console.log(err);
    console.log('message table could not be created :(');
  });
  console.log('+++++ message table exists or was successfully created');

  await client.query(createChannelTable).catch((err) => {
    console.log(err);
    console.log('channel table could not be created :(');
  });
  console.log('+++++ channel table exists or was successfully created');

  await client.query(createUserChannelJunction).catch((err) => {
    console.log(err);
    console.log('user_channel table could not be created :(');
  });
  console.log('+++++ user_channel table exists or was successfully created');

  await client.query(createUserMessageJunction).catch((err) => {
    console.log(err);
    console.log('user_message table could not be created :(');
  });
  console.log('+++++ user_message table exists or was successfully created');

  await client.query(createDMTable).catch((err) => {
    console.log(err);
    console.log('dm table could not be created :(');
  });
  console.log('+++++ dm table exists or was successfully created');

  client.end();
  response.send();
}

module.exports = { getDMs, setupDevDatabase };
